* Notes
** Architecture
1. Take in Cifar-10 Dataset
2. Apply transformations to batch 
3. Optionally apply gaussian preprocessing to batch
4. Select the optimizer
5. Do k times:
   1. Train for 1 epoch with the optimizer
   2. Test the model:
      - If ADV training, compute the adv examples and train on it
      - Compute the accuracy on Low Fourier-filtered images on the test dataset
      - Compute the accuracy on High Fourier-filtered images on the test dataset
      - Compute the accuracy on the original images from the test dataset
   3. Save the results into a dict
6. Save the experiment results
* Features
- [ ] ADV training 
- [ ] Gaussian Augmentation
- [ ] Regular training
* TODO 
** TODO Interfaces
- [X] Create interfaces for moving parts
** TODO Building blocks
- [-] Build Dataset (Cifar10) class
  - [X] ~download_dataset~ method
  - [X] ~load_dataset~ method
  - [X] ~save_datasset~ method
  - [X] ~split_train_test~ method
  - [ ] +~apply_transformation~ method+
  - [X] ~apply_gaussian~ method
  - [ ] +~generate_adversarial~ method+
  - [ ] +~next_batch~ *methods*+
  - [X] Clip and flip for every images
- [ ] Build trainer class
  - [ ] ~train~ method
  - [ ] ~test~ method
  - [ ] ~compute_metrics~
